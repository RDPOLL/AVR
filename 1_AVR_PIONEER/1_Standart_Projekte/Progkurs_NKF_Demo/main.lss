
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000006a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000002  00800060  00800060  000000de  2**0
                  ALLOC
  2 .stab         000006cc  00000000  00000000  000000e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000070  00000000  00000000  000007ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000020  00000000  00000000  0000081c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000021  00000000  00000000  0000083c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000091  00000000  00000000  0000085d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000005f  00000000  00000000  000008ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000000d5  00000000  00000000  0000094d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000020  00000000  00000000  00000a24  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000072  00000000  00000000  00000a44  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	21 c0       	rjmp	.+66     	; 0x46 <__bad_interrupt>
   4:	20 c0       	rjmp	.+64     	; 0x46 <__bad_interrupt>
   6:	1f c0       	rjmp	.+62     	; 0x46 <__bad_interrupt>
   8:	1e c0       	rjmp	.+60     	; 0x46 <__bad_interrupt>
   a:	1d c0       	rjmp	.+58     	; 0x46 <__bad_interrupt>
   c:	1c c0       	rjmp	.+56     	; 0x46 <__bad_interrupt>
   e:	1b c0       	rjmp	.+54     	; 0x46 <__bad_interrupt>
  10:	1a c0       	rjmp	.+52     	; 0x46 <__bad_interrupt>
  12:	19 c0       	rjmp	.+50     	; 0x46 <__bad_interrupt>
  14:	18 c0       	rjmp	.+48     	; 0x46 <__bad_interrupt>
  16:	17 c0       	rjmp	.+46     	; 0x46 <__bad_interrupt>
  18:	16 c0       	rjmp	.+44     	; 0x46 <__bad_interrupt>
  1a:	15 c0       	rjmp	.+42     	; 0x46 <__bad_interrupt>
  1c:	14 c0       	rjmp	.+40     	; 0x46 <__bad_interrupt>
  1e:	13 c0       	rjmp	.+38     	; 0x46 <__bad_interrupt>
  20:	12 c0       	rjmp	.+36     	; 0x46 <__bad_interrupt>
  22:	11 c0       	rjmp	.+34     	; 0x46 <__bad_interrupt>
  24:	10 c0       	rjmp	.+32     	; 0x46 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_clear_bss>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	01 c0       	rjmp	.+2      	; 0x3c <.do_clear_bss_start>

0000003a <.do_clear_bss_loop>:
  3a:	1d 92       	st	X+, r1

0000003c <.do_clear_bss_start>:
  3c:	a2 36       	cpi	r26, 0x62	; 98
  3e:	b1 07       	cpc	r27, r17
  40:	e1 f7       	brne	.-8      	; 0x3a <.do_clear_bss_loop>
  42:	02 d0       	rcall	.+4      	; 0x48 <main>
  44:	10 c0       	rjmp	.+32     	; 0x66 <_exit>

00000046 <__bad_interrupt>:
  46:	dc cf       	rjmp	.-72     	; 0x0 <__vectors>

00000048 <main>:

int main(void)
{
	
	
	x = 0;
  48:	10 92 61 00 	sts	0x0061, r1
  4c:	10 92 60 00 	sts	0x0060, r1
	
	DDRD = 0xFF;
  50:	8f ef       	ldi	r24, 0xFF	; 255
  52:	81 bb       	out	0x11, r24	; 17
	PORTD = 0x00;
  54:	12 ba       	out	0x12, r1	; 18
	
	DDRB = 0X00;
  56:	17 ba       	out	0x17, r1	; 23
	PORTB = 0XFF;
  58:	88 bb       	out	0x18, r24	; 24
	
	//for(x=0; x<1000;x++);
	//PORTD =! PORTD;
	
	
	if(PINB & (1<<PINB0))
  5a:	b0 9b       	sbis	0x16, 0	; 22
  5c:	02 c0       	rjmp	.+4      	; 0x62 <main+0x1a>
	{
		PORTD = 0x00;
  5e:	12 ba       	out	0x12, r1	; 18
  60:	fc cf       	rjmp	.-8      	; 0x5a <main+0x12>
	}
	else
	{
		PORTD = 0xFF;
  62:	82 bb       	out	0x12, r24	; 18
  64:	fa cf       	rjmp	.-12     	; 0x5a <main+0x12>

00000066 <_exit>:
  66:	f8 94       	cli

00000068 <__stop_program>:
  68:	ff cf       	rjmp	.-2      	; 0x68 <__stop_program>
